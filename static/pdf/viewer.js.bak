const url = new URLSearchParams(window.location.search).get('url') || '/static/pdf.pdf';

    const PDFJS = pdfjsLib;

    function createPDFContainer(page, id, className) {
      var pdfContainer = document.getElementById('viewer');
      var divContainer = document.createElement('div');

      divContainer.className = `page page-${page}` ;
      divContainer.style.display = 'flex';
      divContainer.style.justifyContent = 'center';
      // divContainer.style.marginBottom = '4px';

      var canvasNew = document.createElement('canvas');
      canvasNew.id = id;
      canvasNew.className = className;
      divContainer.appendChild(canvasNew);
      pdfContainer.appendChild(divContainer);
    }

    function renderPDF(pdf, pageNum, canvasId) {
      window.pdf = pdf;
      return pdf.getPage(pageNum)
        .then(page => {
          var viewer = document.querySelector('#viewer');
          // var containerWidth = +(window.getComputedStyle(viewer).width.replace('px', ''));
          var containerWidth = viewer.getBoundingClientRect().width;
          // var containerWidth = window.innerWidth;

          var _viewport = page.getViewport({ scale: 1 });
          var scale = containerWidth / _viewport.width;

          var viewport = page.getViewport({ scale });

          console.log('viewBox', viewport.viewBox);
          
          window.page = page

          var canvas = document.getElementById(canvasId);
          var parent = canvas.parentNode;
          var context = canvas.getContext('2d');
          canvas.height = viewport.height;
          canvas.width = viewport.width;
          parent.style.width = `${viewport.width}px`;
          parent.style.height = `${viewport.height}px`;

          var renderContext = {
            canvasContext: context,
            viewport: viewport,
          };

          page
            .render(renderContext)
            .promise
            .then(() => {
              return page.getTextContent();
            })
            .then((textContent) => {
              const canvas = document.querySelector(`canvas#cw-pdf-${pageNum}`);
              const parent = canvas.parentNode;

              const textLayerDiv = document.createElement('div');
              textLayerDiv.className = 'textLayer';
              textLayerDiv.style.width = `${canvas.width}px`;
              textLayerDiv.style.height = `${canvas.height}px`;

              parent.appendChild(textLayerDiv);

              pdfjsLib
                .renderTextLayer({
                  container: textLayerDiv,
                  textContent,
                  viewport,
                });
            });
        });
    }

    function createSeriesCanvas(num, template) {
      var id = '';
      for (var page = 1; page <= num; page++) {
        id = template + page;
        createPDFContainer(page, id, 'pdfClass');
      }
    }

    function loadPDF(fileURL) {
      return PDFJS.getDocument(fileURL).promise.then(function (pdf) {
        //用 promise 获取页面
        var id = '';
        var idTemplate = 'cw-pdf-';
        var pageNum = pdf.numPages;
        //根据页码创建画布
        createSeriesCanvas(pageNum, idTemplate);

        //将pdf渲染到画布上去
        for (var i = 1; i <= pageNum; i++) {
          id = idTemplate + i;
          renderPDF(pdf, i, id);
        }
      });
    }

    loadPDF(url)
      // .then(pdf => {
      //   renderPDF(pdf);
      // });
